// Generated by view binder compiler. Do not edit!
package com.unava.dia.weatherforecast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.unava.dia.weatherforecast.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MounthItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView ivCond;

  @NonNull
  public final MaterialCardView materialCard;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDayTemp;

  @NonNull
  public final TextView tvNightTemp;

  private MounthItemBinding(@NonNull MaterialCardView rootView, @NonNull ImageView ivCond,
      @NonNull MaterialCardView materialCard, @NonNull TextView tvDate, @NonNull TextView tvDayTemp,
      @NonNull TextView tvNightTemp) {
    this.rootView = rootView;
    this.ivCond = ivCond;
    this.materialCard = materialCard;
    this.tvDate = tvDate;
    this.tvDayTemp = tvDayTemp;
    this.tvNightTemp = tvNightTemp;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MounthItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MounthItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.mounth_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MounthItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivCond;
      ImageView ivCond = ViewBindings.findChildViewById(rootView, id);
      if (ivCond == null) {
        break missingId;
      }

      MaterialCardView materialCard = (MaterialCardView) rootView;

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvDayTemp;
      TextView tvDayTemp = ViewBindings.findChildViewById(rootView, id);
      if (tvDayTemp == null) {
        break missingId;
      }

      id = R.id.tvNightTemp;
      TextView tvNightTemp = ViewBindings.findChildViewById(rootView, id);
      if (tvNightTemp == null) {
        break missingId;
      }

      return new MounthItemBinding((MaterialCardView) rootView, ivCond, materialCard, tvDate,
          tvDayTemp, tvNightTemp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
