// Generated by view binder compiler. Do not edit!
package com.unava.dia.weatherforecast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.unava.dia.weatherforecast.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCurrentFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btOk;

  @NonNull
  public final EditText etCity;

  @NonNull
  public final LinearLayout lLayout;

  @NonNull
  public final ForecastWidgetBinding layoutWeather;

  @NonNull
  public final SwitchMaterial swTheme;

  @NonNull
  public final TextView tvCity;

  private FragmentCurrentFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull Button btOk,
      @NonNull EditText etCity, @NonNull LinearLayout lLayout,
      @NonNull ForecastWidgetBinding layoutWeather, @NonNull SwitchMaterial swTheme,
      @NonNull TextView tvCity) {
    this.rootView = rootView;
    this.btOk = btOk;
    this.etCity = etCity;
    this.lLayout = lLayout;
    this.layoutWeather = layoutWeather;
    this.swTheme = swTheme;
    this.tvCity = tvCity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCurrentFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCurrentFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_current_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCurrentFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btOk;
      Button btOk = ViewBindings.findChildViewById(rootView, id);
      if (btOk == null) {
        break missingId;
      }

      id = R.id.etCity;
      EditText etCity = ViewBindings.findChildViewById(rootView, id);
      if (etCity == null) {
        break missingId;
      }

      id = R.id.lLayout;
      LinearLayout lLayout = ViewBindings.findChildViewById(rootView, id);
      if (lLayout == null) {
        break missingId;
      }

      id = R.id.layout_weather;
      View layoutWeather = ViewBindings.findChildViewById(rootView, id);
      if (layoutWeather == null) {
        break missingId;
      }
      ForecastWidgetBinding binding_layoutWeather = ForecastWidgetBinding.bind(layoutWeather);

      id = R.id.swTheme;
      SwitchMaterial swTheme = ViewBindings.findChildViewById(rootView, id);
      if (swTheme == null) {
        break missingId;
      }

      id = R.id.tvCity;
      TextView tvCity = ViewBindings.findChildViewById(rootView, id);
      if (tvCity == null) {
        break missingId;
      }

      return new FragmentCurrentFragmentBinding((ConstraintLayout) rootView, btOk, etCity, lLayout,
          binding_layoutWeather, swTheme, tvCity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
